<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="QnADAO">
 	<resultMap type="QnA" id="QnAResult">
 		<id property="qna_num" column="QNA_NUM"/>
 		<result property="qna_title" column="QNA_TITLE"/>
 		<result property="qna_content" column="QNA_CONTENT"/>
 		<result property="qna_writetime" column="QNA_WRITETIME"/>
 		<result property="qna_hit" column="QNA_HIT" />
 		<result property="upload_path" column="UPLOAD_PATH" />
 		<result property="classification" column="CLASSIFICATION" javaType="String"/>
 	<!-- has one -->
 	<!-- <association property="memberList" javaType="Member" resultMap="MemberResult">
 		
 	</association> -->
 	
 	</resultMap>
 	
 	<resultMap type="Member" id="MemberResult">
 		<id property="member_code" column="MEMBER_CODE" javaType="int"/>
 		<result property="member_code" column="MEMBER_CODE" javaType="int"/>
 		<result property="member_id" column="MEMBER_ID" javaType="String"/>
 		<result property="member_pw" column="MEMBER_PW" javaType="String"/>
 		<result property="member_name" column="MEMBER_NAME" javaType="String"/>
 		<result property="member_contact" column="MEMBER_CONTACT" javaType="String"/>
 		<result property="member_email" column="MEMBER_EMAIL" javaType="String"/>
 		<result property="member_road_address" column="MEMBER_ROAD_ADDRESS" javaType="String"/>
 		<result property="member_jibun_address" column="MEMBER_JIBUN_ADDRESS" javaType="String"/>
 		<result property="member_detail_address" column="MEMBER_DETAIL_ADDRESS" javaType="String"/>
 		<result property="enabled" column="ENABLED" javaType="String"/>
 		<collection property="authList" javaType="MemberAuth" resultMap="AuthResult">
 			
 		</collection>
 	</resultMap>
	<resultMap type="MemberAuth" id="AuthResult">
		<id property="member_auth_code" column = "MEMBER_AUTH_CODE" />
 		<result property="member_auth_code" column = "MEMBER_AUTH_CODE" />
 		<result property="member_code" column="MEMBER_CODE"/>
 		<result property="member_auth" column="MEMBER_AUTH"/>
 	</resultMap> 
 	<!-- 검색 조건문 --> 	
<!-- 	<sql id="criteria">
		<trim prefix="AND (" suffix=")" prefixOverrides="OR">
			<foreach collection="typeArr" item="type">
				<trim prefix="OR">
					<choose>
						<when test="type== 'T'.toString()">
							qna_title like '%'||#{keyword}||'%'
						</when>
						<when test="type== 'C'.toString()">
							qna_content like '%'||#{keyword}||'%' 
						</when>
						<when test="type== 'W'.toString()">
							user_id like '%'||#{keyword)||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql> -->
 	
 	
 	<!-- 전체 QnA 개수 조회 -->
 	
 	<select id="getQnANum" resultType="int">
 			SELECT COUNT(*) FROM cafehi_qna
 			
 			<if test="keyword != null">
 				WHERE qna_title LIKE '%'||#{keyword}||'%'
 			</if>
 			
 	
 	</select>
 	
 	
 	<!-- 페이징 QnA 리스트 조회 -->
  <select id="getQnAList" resultType="QnA">
 		

 	SELECT qna_num, qna_title,classification, qna_content, qna_writetime, qna_hit, member_id FROM(
	
	SELECT rownum rn, cq.qna_num, cq.qna_title, cq.classification, cq.qna_content, cq.qna_writetime, cq.qna_hit, cm.member_id FROM
	
	(SELECT * FROM cafehi_qna ORDER BY qna_num DESC) cq, cafehi_member cm
	
	WHERE cm.member_code = cq.member_code
	<if test="keyword != null">
          AND cq.qna_title like '%'||#{keyword}||'%' 
    </if>
	)
	 <![CDATA[
	 	WHERE rn > (#{pageNum} -1) * #{amount} AND rn <= #{pageNum} * #{amount}
	 ]]>

 	
 	</select>

	<!-- 조회수 갱신 -->
	<update id="updateHit" parameterType="QnA">
		UPDATE cafehi_qna
		SET qna_hit = qna_hit + 1
		WHERE qna_num = #{qna_num}
	</update>

	<!-- QnA 조회 -->
	<select id="getQnA" resultType="QnA">
		SELECT  * FROM(
		SELECT q.qna_num, q.qna_title, q.classification, q.qna_content, q.qna_writetime, q.qna_hit, m.member_id, q.upload_path, q.filename FROM cafehi_qna q, cafehi_member m WHERE m.member_code = q.member_code
		)
		  WHERE qna_num=#{qna_num}
	</select>
	
	<!-- 내가 작성한 QnA 조회 -->
	<select id="getMyQnA" parameterType="int" resultMap="QnAResult">
		
		SELECT qna_num, qna_title, qna_content, qna_writetime, qna_hit, upload_path, filename, res.member_id, classification FROM 
		(SELECT ma.member_auth_code, ma.member_code, ma.member_auth, mem.member_id FROM cafehi_member mem, cafehi_member_auth ma
		WHERE mem.member_code = ma.member_code and ma.member_code = #{member_code}) res, cafehi_qna qna
		WHERE res.member_code = qna.member_code
		
	</select>
	
	<!-- 모든 회원의 QnA 조회  -->
	<select id="MemberAllQnA" parameterType="String" resultMap="QnAResult">
		SELECT cq.qna_num, cq.qna_title, cq.qna_content, cq.qna_writetime, cq.qna_hit, cq.upload_path, cq.filename, cm.member_id, cq.classification 
		FROM cafehi_member cm, cafehi_member_auth cma, cafehi_qna cq
		WHERE cm.member_code = cma.member_code AND cm.member_code = cq.member_code AND cma.member_auth = #{role_user}
	</select>

	<!-- QnA 작성  -->
	<insert id="insertQnA" parameterType="QnA">
		INSERT INTO cafehi_qna (qna_num, qna_title, classification, qna_writetime, qna_hit, member_code , qna_content, upload_path, filename)
		VALUES((select nvl(max(qna_num), 0)+1 from cafehi_qna), #{qna_title}, #{classification}, #{qna_writetime}, #{qna_hit}, #{member_code}, #{qna_content}, #{upload_path}, #{fileName})
	</insert>
	
	<!-- QnA 수정 -->
	<update id="updateQnA" parameterType="QnA">
		UPDATE cafehi_qna 
		SET qna_title=#{qna_title}, classification=#{classification}, qna_content=#{qna_content}, upload_path=#{upload_path}, filename=#{fileName} WHERE qna_num=#{qna_num}
	</update>
	
	<!-- QnA 삭제 -->
	<delete id="deleteQnA" parameterType="QnA">
		DELETE FROM cafehi_qna WHERE qna_num=#{qna_num}
	</delete>	
 	
 </mapper>